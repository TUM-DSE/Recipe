export project_dir 	= $(realpath $(shell pwd)/..)
export eRPC_dir 		= $(realpath $(shell pwd)/../eRPC)
export YCSB     		= $(realpath $(shell pwd)/../ycsb_generator)
export KV       		= $(realpath $(shell pwd)/../concurrent_skiplist)
export APP      		= $(realpath $(shell pwd))
export DPDK 				= ${eRPC_dir}/dpdk_scone/x86_64-native-linuxapp-gcc
export fmt      		= ${project_dir}/fmt
export CXX					= g++
export FOLLY				= ${project_dir}/SCONE_deps/folly
export SCONE_deps	  = ${project_dir}/SCONE_deps
export alloc_dir= ${project_dir}/host_allocator
MODE ?= AES_GCM

ifeq ($(MODE),GMAC)
INCLUDES_PATH   = -I${project_dir}/CR -I${alloc_dir} -I${SCONE_deps}/include -I${FOLLY} -I${FOLLY}/_build -I/usr/local/include -I${project_dir}/openssl/include -I${project_dir}/enc_lib_test -I${eRPC_dir}/src -I${DPDK}/include -I${fmt}/include -I${project_dir} -I${project_dir}/CR

CXXFLAGS        = -g -O3 -std=c++17 -fno-omit-frame-pointer -Wno-unused-parameter -Wno-pedantic -march=native -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 -DRTE_MACHINE_CPUFLAG_SSE3 -D  RTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 -DRTE_MACHINE_CPUFLAG_SSE4_2 -DSCONE -DKV -DGMAC -DENCRYPTION -DCR_PROTO -DSCONE_ALLOC #-DNO_CIPHER
else
INCLUDES_PATH   = -I${project_dir}/CR -I${alloc_dir} -I${SCONE_deps}/include -I${FOLLY} -I${FOLLY}/_build -I/usr/local/include -I${project_dir}/openssl/include -I${project_dir}/encryption_lib -I${eRPC_dir}/src -I${DPDK}/include -I${fmt}/include -I${project_dir} 

CXXFLAGS        = -g -O3 -std=c++17 -fno-omit-frame-pointer -Wno-unused-parameter -Wno-pedantic -march=native -DRTE_MACHINE_CPUFLAG_SSE -DRTE_MACHINE_CPUFLAG_SSE2 -DRTE_MACHINE_CPUFLAG_SSE3 -D  RTE_MACHINE_CPUFLAG_SSSE3 -DRTE_MACHINE_CPUFLAG_SSE4_1 -DRTE_MACHINE_CPUFLAG_SSE4_2 -DSCONE -DKV -DENCRYPTION -DCR_PROTO -DSCONE_ALLOC #-DNO_CIPHER
endif
LDFLAGS_PATH    = -L${SCONE_deps}/lib -L${FOLLY}/_build -L${eRPC_dir}/build -L${project_dir}/openssl/lib -L${DPDK}/lib -L/usr/local/lib -L${fmt}/build

LD_FLAGS        = -lcrypto -ldl -lrt -lpthread -lcityhash -lfmt -lglog -lfolly -ldouble-conversion
LIBS            = -lerpc -lnuma -Wl,--whole-archive -ldpdk -Wl,--no-whole-archive -lrte_ethdev -Wl,-lrte_port


SRC_FILES       = ${APP}/req_handlers.cc \
									${APP}/stats.cc        \
									${APP}/cipher.cc       \
									${APP}/rate_limiter.cc       \
									${APP}/chain_rep.cc    \
									${YCSB}/generate_traces.cc    \
									${KV}/memtable.cpp \
									${alloc_dir}/alloc/create_allocator.cpp


.PHONY          = all


all: head_SCONE middle_SCONE tail_SCONE

head_SCONE:
	$(CXX) -DERPC_DPDK=true ${CXXFLAGS} ${INCLUDES_PATH} ${SRC_FILES} ${APP}/head.cc ${LDFLAGS_PATH} ${LIBS} ${LD_FLAGS} -o head_SCONE_${MODE}

middle_SCONE:
	$(CXX) -DERPC_DPDK=true ${CXXFLAGS} ${INCLUDES_PATH} ${SRC_FILES} ${APP}/middle.cc ${LDFLAGS_PATH} ${LIBS} ${LD_FLAGS} -o middle_SCONE_${MODE}

tail_SCONE:
	$(CXX) -DERPC_DPDK=true ${CXXFLAGS} ${INCLUDES_PATH} ${SRC_FILES} ${APP}/tail.cc ${LDFLAGS_PATH} ${LIBS} ${LD_FLAGS} -o tail_SCONE_${MODE}

clean:
	rm -f head_SCONE middle_SCONE tail_SCONE
