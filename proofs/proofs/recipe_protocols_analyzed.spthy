theory RecipeProtocols begin

// Function signature and definition of the equational theory E

builtins: natural-numbers
functions: adec/2, aenc/2, fst/1, get_key/3, get_secrets/1, h/1, pair/2,
           pk/1, sdec/2, senc/2, sign/2, signed_hash/2, snd/1, true/0, verify/3
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true















restriction unique:
  "∀ x #i #j. ((Unique( x ) @ #i) ∧ (Unique( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction consistent:
  "∀ x y z #i #j.
    ((Consistent( x, y ) @ #i) ∧ (Consistent( x, z ) @ #j)) ⇒ (y = z)"
  // safety formula

restriction unless_completed:
  "∀ x #i #j.
    ((UnlessCompleted( x ) @ #i) ∧ (Complete( x ) @ #j)) ⇒
    ((#i < #j) ∨ (#i = #j))"
  // safety formula

restriction Restr_establish_TLS_connection_1:
  "∀ x #NOW x.1.
    (Restr_establish_TLS_connection_1( x, x.1 ) @ #NOW) ⇒ (¬(x = x.1))"
  // safety formula

rule (modulo E) establish_TLS_connection:
   [ Fr( ~key_tls ), In( a ), In( b ) ]
  --[
  TLSConnection( a, b, ~key_tls ), TLSConnection( a, b, ~key_tls ),
  NewSensitiveInformation( 'TLS symmetric key', ~key_tls ),
  Restr_establish_TLS_connection_1( a, b )
  ]->
   [
   TLSConnection( a, b, ~key_tls ), TLSConnection( b, a, ~key_tls ),
   !SensitiveInformation( 'TLS symmetric key', ~key_tls )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) startup_TEE:
   [ Fr( ~TEE_priv ) ]
  --[
  Unique( <'TEE', $TEE> ), Consistent( <'role', $TEE>, 'TEE' ),
  NewSensitiveInformation( 'TEE private key', ~TEE_priv )
  ]->
   [
   !PubTEE( $TEE, pk(~TEE_priv) ), !StateTEE( $TEE, ~TEE_priv ),
   !SensitiveInformation( 'TEE private key', ~TEE_priv )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) startup_process:
   [ !StateTEE( $TEE, ~TEE_priv ), In( process ) ]
  --[ Consistent( <'role', process>, 'process' ) ]->
   [ !StateProc( $TEE, process ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) startup_CAS:
   [ ] --[ Consistent( <'role', $CAS>, 'CAS' ) ]-> [ !StateCAS( $CAS ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) startup_PD:
   [ ] --[ Consistent( <'role', $PD>, 'PD' ) ]-> [ !StatePD( $PD ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) trans_auth_A2:
   [
   !StatePD( $PD ), TLSConnection( $PD, $CAS, key_tls ),
   Fr( ~expected_state )
   ]
  --[ NewSensitiveInformation( 'expected state', ~expected_state ) ]->
   [
   Out( senc(<'attest request', ~expected_state>, key_tls) ),
   StatePD_A2( $PD, $CAS, key_tls, ~expected_state ),
   !SensitiveInformation( 'expected state', ~expected_state )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) trans_auth_A3_1:
   [
   !StateCAS( $CAS ), TLSConnection( $CAS, $PD, key_tls ),
   In( senc(<'attest request', expected_state>, key_tls) )
   ]
  -->
   [ !StateCAS_A3( $CAS, $PD, key_tls, expected_state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) trans_auth_A3_2:
   [
   !StateCAS_A3( $CAS, $PD, pd_key_tls, expected_state ),
   TLSConnection( $CAS, $Proc, key_tls )
   ]
  --[
  IsPartOf( $Proc, expected_state ),
  Unique( <'local attest request', $Proc, expected_state> ),
  UnlessCompleted( <'attestation phase', expected_state> )
  ]->
   [
   Out( senc('local attest request', key_tls) ),
   StateCAS_A3_quoteExpected( $CAS, $Proc, key_tls, expected_state )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) trans_auth_A4_A5:
   [
   !StateTEE( $TEE, TEE_priv ), !StateProc( $TEE, proc ),
   TLSConnection( proc, $CAS, key_tls ),
   In( senc('local attest request', key_tls) )
   ]
  -->
   [
   Out( senc(<'local attest response', sign(proc, TEE_priv)>, key_tls) ),
   StateProc_A4( $TEE, proc, key_tls )
   ]

  /* has exactly the trivial AC variant */

restriction Restr_trans_auth_A6_1:
  "∀ x #NOW. (Restr_trans_auth_A6_1( x ) @ #NOW) ⇒ (x = true)"
  // safety formula

rule (modulo E) trans_auth_A6:
   [
   StateCAS_A3_quoteExpected( $CAS, $Proc, key_tls, expected_state ),
   !PubTEE( $TEE, TEE_pub ),
   In( senc(<'local attest response', quote>, key_tls) )
   ]
  --[
  IsTrusted( $Proc, expected_state ),
  UnlessCompleted( <'attestation phase', expected_state> ),
  Restr_trans_auth_A6_1( verify(quote, $Proc, TEE_pub) )
  ]->
   [
   StateCAS_A6( $CAS, $Proc, key_tls, expected_state ),
   PotenialLeader( expected_state, $Proc )
   ]

  /*
  rule (modulo AC) trans_auth_A6:
     [
     StateCAS_A3_quoteExpected( $CAS, $Proc, key_tls, expected_state ),
     !PubTEE( $TEE, TEE_pub ),
     In( senc(<'local attest response', quote>, key_tls) )
     ]
    --[
    IsTrusted( $Proc, expected_state ),
    UnlessCompleted( <'attestation phase', expected_state> ),
    Restr_trans_auth_A6_1( z )
    ]->
     [
     StateCAS_A6( $CAS, $Proc, key_tls, expected_state ),
     PotenialLeader( expected_state, $Proc )
     ]
    variants (modulo AC)
    1. $Proc = $Proc.17
       TEE_pub
             = TEE_pub.19
       quote = quote.22
       z     = verify(quote.22, $Proc.17, TEE_pub.19)
    
    2. $Proc = $Proc.23
       TEE_pub
             = pk(x.43)
       quote = sign($Proc.23, x.43)
       z     = true
  */

rule (modulo E) trans_auth_A7_1:
   [
   !StateCAS_A3( $CAS, $PD, key_tls, expected_state ),
   PotenialLeader( expected_state, $Proc )
   ]
  --[
  UnlessCompleted( <'attestation phase', expected_state> ),
  Complete( <'attestation phase', expected_state> ),
  Leader( expected_state, $Proc )
  ]->
   [ Out( senc(<'attestation completed', $Proc>, key_tls) ) ]

  /* has exactly the trivial AC variant */

restriction trans_auth_A7_validation:
  "∀ s #i.
    (Complete( <'attestation phase', s> ) @ #i) ⇒
    (∀ p #j.
      (IsPartOf( p, s ) @ #j) ⇒ (∃ #k. (IsTrusted( p, s ) @ #k) ∧ (#k < #i)))"

rule (modulo E) trans_auth_A7_2:
   [
   StatePD_A2( $PD, $CAS, key_tls, expected_state ),
   In( senc(<'attestation completed', $Proc>, key_tls) )
   ]
  -->
   [ !StatePD_A7( $PD, $CAS, expected_state, $Proc ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) trans_auth_A8:
   [ StateCAS_A6( $CAS, $Proc, key_tls, expected_state ) ]
  --[ ShareSecrets( expected_state ) ]->
   [ Out( senc(<'secrets', get_secrets(expected_state)>, key_tls) ) ]

  /* has exactly the trivial AC variant */

restriction trans_auth_A8_validation:
  "∀ s #i.
    (ShareSecrets( s ) @ #i) ⇒
    (∃ #j. (Complete( <'attestation phase', s> ) @ #j) ∧ (#i < #j))"

rule (modulo E) init_proc_1:
   [
   StateProc_A4( $TEE, proc, key_tls ),
   In( senc(<'secrets', secrets>, key_tls) )
   ]
  -->
   [ !InitializedProc( $TEE, proc, secrets ) ]

  /* has exactly the trivial AC variant */

restriction Restr_init_proc_2_1:
  "∀ x #NOW x.1. (Restr_init_proc_2_1( x, x.1 ) @ #NOW) ⇒ (¬(x = x.1))"
  // safety formula

rule (modulo E) init_proc_2:
   [ !InitializedProc( $TEE, $Proc, secrets ) ]
  --[
  Unique( <'counter setup', secrets, $Proc, $Proc2> ),
  SetupCounter( secrets, $Proc, $Proc2 ),
  Restr_init_proc_2_1( $Proc, $Proc2 )
  ]->
   [
   RECIPE_RecvCounter( secrets, $Proc, $Proc2, %1 ),
   RECIPE_SendCounter( secrets, $Proc, $Proc2, %1 )
   ]

  /* has exactly the trivial AC variant */

restriction init_proc_2_validation:
  "∀ s p1 p2 #i.
    (SetupCounter( get_secrets(s), p1, p2 ) @ #i) ⇒
    (∃ #j #k. (IsPartOf( p1, s ) @ #j) ∧ (IsPartOf( p2, s ) @ #k))"

rule (modulo E) send_msg:
   [
   Fr( ~msg ),
   RECIPE_SendCounter( secrets, $RECIPE_SEND, $RECIPE_RECV, %send_cnt )
   ]
  --[
  RECIPESendMsg( secrets, $RECIPE_SEND, $RECIPE_RECV, ~msg ),
  RECIPESendMsgCtr( secrets, $RECIPE_SEND, $RECIPE_RECV, ~msg, %send_cnt ),
  RECIPESendCtr( secrets, $RECIPE_SEND, $RECIPE_RECV, %send_cnt )
  ]->
   [
   RECIPE_SendCounter( secrets, $RECIPE_SEND, $RECIPE_RECV, (%send_cnt%+%1)
   ),
   Out( senc(<
              signed_hash(get_key(secrets, $RECIPE_SEND, $RECIPE_RECV),
                          <~msg, %send_cnt>), 
              ~msg, %send_cnt>,
             get_key(secrets, $RECIPE_SEND, $RECIPE_RECV))
   )
   ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

restriction send_ctr_increasing:
  "∀ secrets recipe1 recipe2 ctr1 ctr2 #i #j.
    (((RECIPESendCtr( secrets, recipe1, recipe2, ctr1 ) @ #i) ∧
      (RECIPESendCtr( secrets, recipe1, recipe2, ctr2 ) @ #j)) ∧
     (#i < #j)) ⇒
    (∃ z. ctr2 = (ctr1++z))"

restriction Restr_recv_msg_1:
  "∀ x #NOW x.1. (Restr_recv_msg_1( x, x.1 ) @ #NOW) ⇒ (x = x.1)"
  // safety formula

restriction Restr_recv_msg_2:
  "∀ x #NOW x.1. (Restr_recv_msg_2( x, x.1 ) @ #NOW) ⇒ (x = x.1)"
  // safety formula

rule (modulo E) recv_msg:
   [
   In( senc(<a, msg, %cnt>, get_key(secrets, $RECIPE_SEND, $RECIPE_RECV)) ),
   RECIPE_RecvCounter( secrets, $RECIPE_RECV, $RECIPE_SEND, %recv_cnt )
   ]
  --[
  RECIPEAcceptMsg( secrets, $RECIPE_SEND, $RECIPE_RECV, msg ),
  RECIPERecvCounter( secrets, $RECIPE_RECV, $RECIPE_SEND, %recv_cnt ),
  Restr_recv_msg_1( signed_hash(get_key(secrets, $RECIPE_SEND,
                                        $RECIPE_RECV),
                                <msg, %cnt>),
                    a
  ),
  Restr_recv_msg_2( %cnt, %recv_cnt )
  ]->
   [
   RECIPE_RecvCounter( secrets, $RECIPE_RECV, $RECIPE_SEND, (%recv_cnt%+%1)
   )
   ]

  // loop breaker: [1]
  /* has exactly the trivial AC variant */

restriction recv_ctr_increasing:
  "∀ secrets recipe1 recipe2 ctr1 ctr2 #i #j.
    (((RECIPERecvCounter( secrets, recipe1, recipe2, ctr1 ) @ #i) ∧
      (RECIPERecvCounter( secrets, recipe1, recipe2, ctr2 ) @ #j)) ∧
     (#i < #j)) ⇒
    (∃ z. ctr2 = (ctr1++z))"

rule (modulo E) compromise_recipe_private_key:
   [ !SensitiveInformation( type, information ) ]
  --[ Compromised( type, information ) ]->
   [ Out( information ) ]

  /* has exactly the trivial AC variant */

lemma sanity_complete_attestation_phase:
  exists-trace
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ∧
   (∃ s #j. Complete( <'attestation phase', s> ) @ #j)"
/*
guarded formula characterizing all satisfying traces:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ s #j. (Complete( <'attestation phase', s> ) @ #j))"
*/
simplify
solve( !StateCAS_A3( $CAS, $PD, key_tls, s ) ▶₀ #j )
  case trans_auth_A3_1_case_1
  solve( PotenialLeader( s, $Proc ) ▶₁ #j )
    case trans_auth_A6_case_1
    solve( StateCAS_A3_quoteExpected( $CAS.2, $Proc, key_tls.3, s ) ▶₀ #k )
      case trans_auth_A3_2
      solve( !KU( senc(<'attest request', s>, ~key_tls) ) @ #vk )
        case trans_auth_A2
        solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv)>,
                         ~key_tls.1)
               ) @ #vk.3 )
          case trans_auth_A4_A5
          solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.2)
                 ) @ #vk.4 )
            case trans_auth_A2
            solve( !KU( senc('local attest request', ~key_tls.1) ) @ #vk.5 )
              case trans_auth_A3_2
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sanity_complete_accept_message:
  exists-trace
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ∧
   (∃ s recipe_a recipe_b msg #j.
     RECIPEAcceptMsg( get_secrets(s), recipe_a, recipe_b, msg ) @ #j)"
/*
guarded formula characterizing all satisfying traces:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ s recipe_a recipe_b msg #j.
   (RECIPEAcceptMsg( get_secrets(s), recipe_a, recipe_b, msg ) @ #j))"
*/
simplify
solve( RECIPE_RecvCounter( get_secrets(s), $RECIPE_RECV, $RECIPE_SEND,
                           %cnt
       ) ▶₁ #j )
  case init_proc_2_case_1
  solve( !StateCAS_A3( $CAS.1, $PD, pd_key_tls, s ) ▶₀ #j.1 )
    case trans_auth_A3_1_case_1
    solve( TLSConnection( $CAS.1, $RECIPE_RECV, key_tls.2 ) ▶₁ #j.1 )
      case establish_TLS_connection_case_2
      solve( !StateCAS_A3( $CAS, $PD, pd_key_tls, s ) ▶₀ #k )
        case trans_auth_A3_1_case_1
        solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
          case establish_TLS_connection_case_1
          solve( !KU( senc(<'secrets', get_secrets(s)>, ~key_tls.4) ) @ #vk.1 )
            case trans_auth_A8
            solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, s ) ▶₀ #j.2 )
              case trans_auth_A3_1_case_1
              solve( PotenialLeader( s, $Proc ) ▶₁ #j.2 )
                case trans_auth_A6_case_1
                solve( StateCAS_A3_quoteExpected( $CAS.2, $RECIPE_SEND, key_tls.4, s
                       ) ▶₀ #k.1 )
                  case trans_auth_A3_2
                  solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                    case startup_TEE
                    solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5, s
                           ) ▶₀ #k.2 )
                      case trans_auth_A3_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5, s ) ▶₀ #k.3 )
                        case trans_auth_A3_2
                        solve( !KU( senc(<'attest request', s>, ~key_tls.3) ) @ #vk.5 )
                          case trans_auth_A2
                          solve( !KU( senc(<
                                            signed_hash(get_key(get_secrets(~expected_state), $RECIPE_SEND,
                                                                $RECIPE_RECV),
                                                        <msg, %1>), 
                                            msg, %1>,
                                           get_key(get_secrets(~expected_state), $RECIPE_SEND, $RECIPE_RECV))
                                 ) @ #vk.2 )
                            case send_msg
                            solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                   ) @ #vk.7 )
                              case trans_auth_A2
                              solve( !KU( senc(<'local attest response', 
                                                sign($RECIPE_RECV, ~TEE_priv.1)>,
                                               ~key_tls.2)
                                     ) @ #vk.8 )
                                case trans_auth_A4_A5
                                solve( !KU( senc(<'local attest response', sign($RECIPE_SEND, ~TEE_priv)
                                                 >,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.17 )
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case trans_auth_A8
                                            solve( (#j.2 < #j.3)  ∥ (#j.2 = #j.3) )
                                              case case_2
                                              solve( StateCAS_A3_quoteExpected( $CAS.1, $RECIPE_SEND,
                                                                                key_tls.4, ~expected_state
                                                     ) ▶₀ #k.4 )
                                                case trans_auth_A3_2
                                                solve( StateCAS_A3_quoteExpected( $CAS.1, $RECIPE_SEND,
                                                                                  key_tls.4, ~expected_state
                                                       ) ▶₀ #k.4 )
                                                  case trans_auth_A3_2
                                                  solve( StateCAS_A3_quoteExpected( $CAS.1, $RECIPE_RECV,
                                                                                    key_tls.4, ~expected_state
                                                         ) ▶₀ #k.4 )
                                                    case trans_auth_A3_2
                                                    solve( StateCAS_A3_quoteExpected( $CAS.1, $Proc,
                                                                                      key_tls.4,
                                                                                      ~expected_state
                                                           ) ▶₀ #k.4 )
                                                      case trans_auth_A3_2
                                                      solve( !KU( senc('local attest request', ~key_tls.2)
                                                             ) @ #vk.7 )
                                                        case trans_auth_A3_2
                                                        solve( !KU( senc('local attest request', ~key_tls.1)
                                                               ) @ #vk.13 )
                                                          case trans_auth_A3_2
                                                          solve( !KU( senc('local attest request', ~key_tls.3)
                                                                 ) @ #vk.14 )
                                                            case trans_auth_A3_2
                                                            SOLVED // trace found
                                                          qed
                                                        qed
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma sensitive_info_stays_secret [reuse]:
  all-traces
  "∀ type info #i #k.
    ((NewSensitiveInformation( type, info ) @ #i) ∧ (K( info ) @ #k)) ⇒
    ((∃ #c. (#c < #k) ∧ (Compromised( type, info ) @ #c)) ∨
     (∃ x #c. (#c < #k) ∧ (Compromised( 'TLS symmetric key', x ) @ #c)))"
/*
guarded formula characterizing all counter-examples:
"∃ type info #i #k.
  (NewSensitiveInformation( type, info ) @ #i) ∧ (K( info ) @ #k)
 ∧
  (∀ #c. (Compromised( type, info ) @ #c) ⇒ ¬(#c < #k)) ∧
  (∀ x #c. (Compromised( 'TLS symmetric key', x ) @ #c) ⇒ ¬(#c < #k))"
*/
simplify
solve( NewSensitiveInformation( type, info ) @ #i )
  case establish_TLS_connection
  solve( !KU( ~key_tls ) @ #vk )
    case compromise_recipe_private_key
    by contradiction /* from formulas */
  qed
next
  case startup_TEE
  solve( !KU( ~TEE_priv ) @ #vk )
    case compromise_recipe_private_key
    by contradiction /* from formulas */
  qed
next
  case trans_auth_A2
  solve( !StatePD( $PD ) ▶₀ #i )
    case startup_PD
    solve( TLSConnection( $PD, $CAS, key_tls ) ▶₁ #i )
      case establish_TLS_connection_case_1
      solve( !KU( ~expected_state ) @ #vk )
        case compromise_recipe_private_key
        by contradiction /* from formulas */
      next
        case trans_auth_A2
        solve( !KU( ~key_tls ) @ #vk.3 )
          case compromise_recipe_private_key
          by contradiction /* from formulas */
        qed
      qed
    next
      case establish_TLS_connection_case_2
      solve( !KU( ~expected_state ) @ #vk )
        case compromise_recipe_private_key
        by contradiction /* from formulas */
      next
        case trans_auth_A2
        solve( !KU( ~key_tls ) @ #vk.3 )
          case compromise_recipe_private_key
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed

lemma verified_msg_is_auth [heuristic=O "./recipe_oracle.py"]:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ s recipe_a recipe_b msg #j #t1.
     ((RECIPEAcceptMsg( get_secrets(s), recipe_a, recipe_b, msg ) @ #j) ∧
      (IsTrusted( recipe_b, s ) @ #t1)) ⇒
     (∃ #k #l.
       (((IsTrusted( recipe_a, s ) @ #k) ∧
         (RECIPESendMsg( get_secrets(s), recipe_a, recipe_b, msg ) @ #l)) ∧
        (#k < #l)) ∧
       (#l < #j)))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ s recipe_a recipe_b msg #j #t1.
   (RECIPEAcceptMsg( get_secrets(s), recipe_a, recipe_b, msg ) @ #j) ∧
   (IsTrusted( recipe_b, s ) @ #t1)
  ∧
   ∀ #k #l.
    (IsTrusted( recipe_a, s ) @ #k) ∧
    (RECIPESendMsg( get_secrets(s), recipe_a, recipe_b, msg ) @ #l)
   ⇒
    ((¬(#k < #l)) ∨ (¬(#l < #j))))"
*/
simplify
solve( StateCAS_A3_quoteExpected( $CAS, $RECIPE_RECV, key_tls, s
       ) ▶₀ #t1 )
  case trans_auth_A3_2_case_1
  solve( !PubTEE( $TEE, pk(x) ) ▶₁ #t1 )
    case startup_TEE
    solve( !KU( senc(<'local attest response', sign($RECIPE_RECV, ~TEE_priv)
                     >,
                     ~key_tls)
           ) @ #vk.1 )
      case c_senc
      solve( !KU( ~key_tls ) @ #vk.7 )
        case compromise_recipe_private_key
        by contradiction /* from formulas */
      qed
    next
      case trans_auth_A4_A5
      solve( !KU( senc(<'attest request', s>, ~key_tls.1) ) @ #vk.2 )
        case c_senc
        solve( !KU( ~key_tls.1 ) @ #vk.8 )
          case compromise_recipe_private_key
          by contradiction /* from formulas */
        qed
      next
        case trans_auth_A2
        solve( !KU( senc(<
                          signed_hash(get_key(get_secrets(~expected_state), $RECIPE_SEND,
                                              $RECIPE_RECV),
                                      <msg, %cnt>), 
                          msg, %cnt>,
                         get_key(get_secrets(~expected_state), $RECIPE_SEND, $RECIPE_RECV))
               ) @ #vk.2 )
          case c_senc
          solve( !KU( get_key(get_secrets(~expected_state), $RECIPE_SEND,
                              $RECIPE_RECV)
                 ) @ #vk.8 )
            case c_get_key
            solve( !KU( signed_hash(get_key(get_secrets(~expected_state),
                                            $RECIPE_SEND, $RECIPE_RECV),
                                    <msg, %cnt>)
                   ) @ #vk.9 )
              case c_signed_hash
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case send_msg
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case send_msg
          solve( RECIPE_RecvCounter( get_secrets(~expected_state), $RECIPE_RECV,
                                     $RECIPE_SEND, %cnt
                 ) ▶₁ #j )
            case init_proc_2_case_1
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case init_proc_2_case_2
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case trans_auth_A3_2_case_2
  solve( !PubTEE( $TEE, pk(x) ) ▶₁ #t1 )
    case startup_TEE
    solve( !KU( senc(<'local attest response', sign($RECIPE_RECV, ~TEE_priv)
                     >,
                     ~key_tls)
           ) @ #vk.1 )
      case c_senc
      solve( !KU( ~key_tls ) @ #vk.7 )
        case compromise_recipe_private_key
        by contradiction /* from formulas */
      qed
    next
      case trans_auth_A4_A5
      solve( !KU( senc(<'attest request', s>, ~key_tls.1) ) @ #vk.2 )
        case c_senc
        solve( !KU( ~key_tls.1 ) @ #vk.8 )
          case compromise_recipe_private_key
          by contradiction /* from formulas */
        qed
      next
        case trans_auth_A2
        solve( !KU( senc(<
                          signed_hash(get_key(get_secrets(~expected_state), $RECIPE_SEND,
                                              $RECIPE_RECV),
                                      <msg, %cnt>), 
                          msg, %cnt>,
                         get_key(get_secrets(~expected_state), $RECIPE_SEND, $RECIPE_RECV))
               ) @ #vk.2 )
          case c_senc
          solve( !KU( get_key(get_secrets(~expected_state), $RECIPE_SEND,
                              $RECIPE_RECV)
                 ) @ #vk.8 )
            case c_get_key
            solve( !KU( signed_hash(get_key(get_secrets(~expected_state),
                                            $RECIPE_SEND, $RECIPE_RECV),
                                    <msg, %cnt>)
                   ) @ #vk.9 )
              case c_signed_hash
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case send_msg
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case send_msg
          solve( RECIPE_RecvCounter( get_secrets(~expected_state), $RECIPE_RECV,
                                     $RECIPE_SEND, %cnt
                 ) ▶₁ #j )
            case init_proc_2_case_1
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          next
            case init_proc_2_case_2
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case trans_auth_A3_2_case_3
  solve( !PubTEE( $TEE, pk(x) ) ▶₁ #t1 )
    case startup_TEE
    solve( !KU( senc(<'local attest response', sign($RECIPE_RECV, ~TEE_priv)
                     >,
                     ~key_tls)
           ) @ #vk.1 )
      case c_senc
      solve( !KU( ~key_tls ) @ #vk.7 )
        case compromise_recipe_private_key
        by contradiction /* from formulas */
      qed
    next
      case trans_auth_A4_A5
      solve( !KU( senc(<'attest request', s>, ~key_tls.1) ) @ #vk.2 )
        case c_senc
        solve( !KU( ~key_tls.1 ) @ #vk.8 )
          case compromise_recipe_private_key
          by contradiction /* from formulas */
        qed
      next
        case trans_auth_A2
        solve( !KU( senc(<
                          signed_hash(get_key(get_secrets(~expected_state), $RECIPE_SEND,
                                              $RECIPE_RECV),
                                      <msg, %cnt>), 
                          msg, %cnt>,
                         get_key(get_secrets(~expected_state), $RECIPE_SEND, $RECIPE_RECV))
               ) @ #vk.2 )
          case c_senc
          solve( !KU( get_key(get_secrets(~expected_state), $RECIPE_SEND,
                              $RECIPE_RECV)
                 ) @ #vk.8 )
            case c_get_key
            solve( !KU( signed_hash(get_key(get_secrets(~expected_state),
                                            $RECIPE_SEND, $RECIPE_RECV),
                                    <msg, %cnt>)
                   ) @ #vk.9 )
              case c_signed_hash
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case send_msg
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case send_msg
          solve( RECIPE_RecvCounter( get_secrets(~expected_state), $RECIPE_RECV,
                                     $RECIPE_SEND, %cnt
                 ) ▶₁ #j )
            case init_proc_2_case_1
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case init_proc_2_case_2
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case trans_auth_A3_2_case_4
  solve( !PubTEE( $TEE, pk(x) ) ▶₁ #t1 )
    case startup_TEE
    solve( !KU( senc(<'local attest response', sign($RECIPE_RECV, ~TEE_priv)
                     >,
                     ~key_tls)
           ) @ #vk.1 )
      case c_senc
      solve( !KU( ~key_tls ) @ #vk.7 )
        case compromise_recipe_private_key
        by contradiction /* from formulas */
      qed
    next
      case trans_auth_A4_A5
      solve( !KU( senc(<'attest request', s>, ~key_tls.1) ) @ #vk.2 )
        case c_senc
        solve( !KU( ~key_tls.1 ) @ #vk.8 )
          case compromise_recipe_private_key
          by contradiction /* from formulas */
        qed
      next
        case trans_auth_A2
        solve( !KU( senc(<
                          signed_hash(get_key(get_secrets(~expected_state), $RECIPE_SEND,
                                              $RECIPE_RECV),
                                      <msg, %cnt>), 
                          msg, %cnt>,
                         get_key(get_secrets(~expected_state), $RECIPE_SEND, $RECIPE_RECV))
               ) @ #vk.2 )
          case c_senc
          solve( !KU( get_key(get_secrets(~expected_state), $RECIPE_SEND,
                              $RECIPE_RECV)
                 ) @ #vk.8 )
            case c_get_key
            solve( !KU( signed_hash(get_key(get_secrets(~expected_state),
                                            $RECIPE_SEND, $RECIPE_RECV),
                                    <msg, %cnt>)
                   ) @ #vk.9 )
              case c_signed_hash
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            next
              case send_msg
              solve( !KU( get_secrets(~expected_state) ) @ #vk.13 )
                case c_get_secrets
                solve( !KU( ~expected_state ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                next
                  case trans_auth_A2
                  solve( !KU( ~key_tls.1 ) @ #vk.16 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case trans_auth_A8_case_1
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_2
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_3
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              next
                case trans_auth_A8_case_4
                solve( !KU( ~key_tls.2 ) @ #vk.15 )
                  case compromise_recipe_private_key
                  by contradiction /* from formulas */
                qed
              qed
            qed
          qed
        next
          case send_msg
          solve( RECIPE_RecvCounter( get_secrets(~expected_state), $RECIPE_RECV,
                                     $RECIPE_SEND, %cnt
                 ) ▶₁ #j )
            case init_proc_2_case_1
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                next
                  case trans_auth_A8
                  solve( !StateCAS_A3( $CAS.2, $PD.2, key_tls.4, ~expected_state
                         ) ▶₀ #j.1 )
                    case trans_auth_A3_1_case_1
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case trans_auth_A3_1_case_2
                    solve( PotenialLeader( ~expected_state, $Proc ) ▶₁ #j.1 )
                      case trans_auth_A6_case_1
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_2
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_3
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    next
                      case trans_auth_A6_case_4
                      solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_SEND, key_tls.5,
                                                        ~expected_state
                             ) ▶₀ #k.1 )
                        case trans_auth_A3_2
                        solve( !PubTEE( $TEE.1, pk(x) ) ▶₁ #k.1 )
                          case startup_TEE
                          solve( StateCAS_A3_quoteExpected( $CAS.3, $RECIPE_RECV, key_tls.5,
                                                            ~expected_state
                                 ) ▶₀ #k.2 )
                            case trans_auth_A3_2
                            solve( StateCAS_A3_quoteExpected( $CAS.3, $Proc, key_tls.5,
                                                              ~expected_state
                                   ) ▶₀ #k.2 )
                              case trans_auth_A3_2
                              solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls)
                                     ) @ #vk.8 )
                                case c_senc
                                solve( !KU( ~key_tls ) @ #vk.22 )
                                  case compromise_recipe_private_key
                                  by contradiction /* from formulas */
                                qed
                              next
                                case trans_auth_A2
                                solve( !KU( senc(<'local attest response', 
                                                  sign($RECIPE_SEND, ~TEE_priv.1)>,
                                                 ~key_tls.1)
                                       ) @ #vk.9 )
                                  case c_senc
                                  solve( !KU( ~key_tls.1 ) @ #vk.19 )
                                    case compromise_recipe_private_key
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case trans_auth_A4_A5
                                  solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.3)
                                         ) @ #vk.10 )
                                    case c_senc
                                    solve( !KU( ~key_tls.3 ) @ #vk.20 )
                                      case compromise_recipe_private_key
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case trans_auth_A2
                                    solve( !KU( senc(<'local attest response', sign($Proc, ~TEE_priv.2)>,
                                                     ~key_tls.3)
                                           ) @ #vk.10 )
                                      case c_senc
                                      solve( !KU( ~key_tls.3 ) @ #vk.17 )
                                        case compromise_recipe_private_key
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case trans_auth_A4_A5
                                      solve( !KU( senc(<'attest request', ~expected_state>, ~key_tls.4)
                                             ) @ #vk.11 )
                                        case c_senc
                                        solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                          case compromise_recipe_private_key
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case trans_auth_A2
                                        solve( RECIPE_SendCounter( get_secrets(~expected_state), $RECIPE_SEND,
                                                                   $RECIPE_RECV, %1
                                               ) ▶₁ #vr.10 )
                                          case init_proc_2_case_1
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case trans_auth_A8
                                            by contradiction /* cyclic */
                                          qed
                                        next
                                          case init_proc_2_case_2
                                          solve( !KU( senc(<'secrets', get_secrets(~expected_state)>,
                                                           ~key_tls.4)
                                                 ) @ #vk.14 )
                                            case c_senc
                                            solve( !KU( ~key_tls.4 ) @ #vk.18 )
                                              case compromise_recipe_private_key
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case init_proc_2_case_2
            solve( !StateCAS_A3( $CAS.2, $PD.1, pd_key_tls, ~expected_state ) ▶₀ #k )
              case trans_auth_A3_1_case_1
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case trans_auth_A3_1_case_2
              solve( TLSConnection( $CAS, $RECIPE_SEND, key_tls.1 ) ▶₁ #k )
                case establish_TLS_connection_case_1
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case establish_TLS_connection_case_2
                solve( !KU( senc(<'secrets', get_secrets(~expected_state)>, ~key_tls.4)
                       ) @ #vk.7 )
                  case c_senc
                  solve( !KU( ~key_tls.4 ) @ #vk.15 )
                    case compromise_recipe_private_key
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma no_lost_messages [heuristic=O "./recipe_oracle.py"]:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ secrets recipe_a recipe_b msg ctr #i #j.
     ((RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #i) ∧
      (RECIPESendMsgCtr( secrets, recipe_a, recipe_b, msg, ctr ) @ #j)) ⇒
     (∀ msg2 ctr2 #k.
       ((∃ z. ctr = (ctr2++z)) ∧
        (RECIPESendMsgCtr( secrets, recipe_a, recipe_b, msg2, ctr2 ) @ #k)) ⇒
       (∃ #l.
         (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #l) ∧
         (#l < #i))))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets recipe_a recipe_b msg ctr #i #j.
   (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #i) ∧
   (RECIPESendMsgCtr( secrets, recipe_a, recipe_b, msg, ctr ) @ #j)
  ∧
   ∃ msg2 ctr2 #k.
    (RECIPESendMsgCtr( secrets, recipe_a, recipe_b, msg2, ctr2 ) @ #k)
   ∧
    (∃ z. (ctr = (ctr2++z))) ∧
    (∀ #l.
      (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #l)
     ⇒
      ¬(#l < #i)))"
*/
simplify
by solve( RECIPESendMsgCtr( secrets, $RECIPE_SEND, $RECIPE_RECV, msg,
                            (z++%send_cnt)
          ) @ #j )

lemma no_message_reordering [heuristic=O "./recipe_oracle.py"]:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ secrets recipe_a recipe_b msg1 msg2 #i #j.
     (((RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg1 ) @ #i) ∧
       (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg2 ) @ #j)) ∧
      (#i < #j)) ⇒
     (∃ #k #l.
       ((RECIPESendMsg( secrets, recipe_a, recipe_b, msg1 ) @ #k) ∧
        (RECIPESendMsg( secrets, recipe_a, recipe_b, msg2 ) @ #l)) ∧
       (#k < #l)))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets recipe_a recipe_b msg1 msg2 #i #j.
   (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg1 ) @ #i) ∧
   (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg2 ) @ #j)
  ∧
   (#i < #j) ∧
   (∀ #k #l.
     (RECIPESendMsg( secrets, recipe_a, recipe_b, msg1 ) @ #k) ∧
     (RECIPESendMsg( secrets, recipe_a, recipe_b, msg2 ) @ #l)
    ⇒
     ¬(#k < #l)))"
*/
by simplify

lemma no_double_messages [heuristic=O "./recipe_oracle.py"]:
  all-traces
  "(¬(∃ type info #i. Compromised( type, info ) @ #i)) ⇒
   (∀ secrets recipe_a recipe_b msg #i #j.
     ((RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #i) ∧
      (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #j)) ⇒
     (#i = #j))"
/*
guarded formula characterizing all counter-examples:
"(∀ type info #i. (Compromised( type, info ) @ #i) ⇒ ⊥) ∧
 (∃ secrets recipe_a recipe_b msg #i #j.
   (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #i) ∧
   (RECIPEAcceptMsg( secrets, recipe_a, recipe_b, msg ) @ #j)
  ∧
   ¬(#i = #j))"
*/
simplify
by solve( (#i < #j)  ∥ (#j < #i) )































/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.10.0
Maude version 3.4
Git revision: UNKNOWN, branch: UNKNOWN
Compiled at: 2025-01-01 11:35:12.535900386 UTC
*/

end